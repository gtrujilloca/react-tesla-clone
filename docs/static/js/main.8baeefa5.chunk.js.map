{"version":3,"sources":["features/car/carSlice.js","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","Container","src","alt","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","props","CloseIcon","Section","title","description","backgroudImg","leftBtnText","rightBtnText","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8baeefa5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n  cars: [\n    'Model S',\n    'Model 3',\n    'Model Y',\n    'Model X',\n  ]\n}\n\nconst carSlice = createSlice({\n  name: 'car',\n  initialState,\n  reducers: {}\n})\n\nexport const selectCars = state => state.car.cars;\n\nexport default carSlice.reducer","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { selectCars } from '../features/car/carSlice';\nimport { useSelector } from 'react-redux'\n\nfunction Header() {\n  const [burgerStatus, setBurgerStatus] = useState(false)\n  const cars = useSelector(selectCars);\n\n  return (\n    <Container>\n      <a>\n        <img src=\"/images/logo.svg\" alt=\"logo\" />\n      </a>\n      <Menu>\n        {\n          cars && cars.map((car,index) => (\n            <a href=\"#\" key={index}>{car}</a>\n            ))\n          }\n      </Menu>\n      <RightMenu>\n        <a href=\"#\">Shop</a>\n        <a href=\"#\">Tesla Account</a>\n        <CustomMenu onClick={() => setBurgerStatus(true)}/>\n      </RightMenu>\n      <BurgerNav show={burgerStatus}>\n        <CloseWrapper>\n          <CustomClose onClick={() => setBurgerStatus(false)}/>\n        </CloseWrapper>\n        {\n          cars && cars.map((car,index) => (\n            <li key={index}><a href=\"#\">{car}</a></li>\n            ))\n          }\n        <li><a href=\"#\">Existing inventory</a></li>\n        <li><a href=\"#\">Used inventory</a></li>\n        <li><a href=\"#\">Cybertruck</a></li>\n        <li><a href=\"#\">Roadaster</a></li>\n        <li><a href=\"#\">Semi</a></li>\n        <li><a href=\"#\">Chargin</a></li>\n        <li><a href=\"#\">Semi</a></li>\n      </BurgerNav>\n    </Container>\n  )\n}\n\nexport default Header\n\nconst Container = styled.div `\n  z-index: 10;\n  min-height: 60px;\n  position: fixed;\n  inset: 0 0 auto 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20 px;\n`\n\nconst Menu = styled.div `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  a {\n    font-weight: 600;\n    text-transform: uppercase;\n    padding: 0 10px;\n    flex-wrap: nowrap;\n  }\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RightMenu = styled.div `\n  display: flex;\n  align-items: center;\n  a {\n    font-weight: 600;\n    text-transform: uppercase;\n    margin-right: 10px;\n  }\n`\n\nconst CustomMenu = styled(MenuIcon) `\n  cursor: pointer;\n`\n\nconst BurgerNav = styled.div `\n  position: fixed;\n  inset: 0 0 0 auto;\n  background-color: white;\n  width: 300px;\n  z-index: 100;\n  list-style: none;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  text-align: start;\n  transform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\n  transition: transform 0.2s ease-in-out;\n  li {\n    padding: 15px 0;\n    border-bottom: 1px solid rgba(0,0,0,.2);\n\n    a {\n      font-weight: 600;\n    }\n  }\n`\n\nconst CustomClose = styled(CloseIcon)`\n  cursor: pointer;\n`\n\nconst CloseWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`","import React from 'react'\nimport styled from 'styled-components'\nimport Fade from 'react-reveal/Fade';\n\nfunction Section({\n  title,\n  description,\n  backgroudImg,\n  leftBtnText,\n  rightBtnText,\n}) {\n  return (\n    <Wrap bgImage={backgroudImg}>\n      <Fade bottom>\n        <ItemText>\n          <h1>{ title }</h1>\n          <p>{ description }</p>\n        </ItemText>\n      </Fade>\n      <Buttons>\n        <Fade bottom>\n          <ButtonGroup>\n            <LeftButton>{ leftBtnText }</LeftButton>\n            {\n              rightBtnText &&\n              <RightButton>{ rightBtnText}</RightButton>\n            }\n          </ButtonGroup>\n          <DownArrow src='/images/down-arrow.svg'/>\n        </Fade>\n      </Buttons>\n    </Wrap>\n  )\n}\n\nexport default Section\n\nconst Wrap = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  /* background-image: url('/images/model-s.jpg'); */\n  background-image: ${ props => `url(\"images/${props.bgImage}\")`};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between; // vertical\n  align-items: center; // horizontal\n`;\n\nconst ItemText = styled.div `\n  padding-top: 15vh;\n  text-align: center;\n`\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 768px){\n    flex-direction: column;\n  }\n`\n\nconst LeftButton = styled.div`\n  background-color: rgba(23,26,32,0.8);\n  height: 40px;\n  width: 256px;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n  opacity: 0.75;\n  text-transform: uppercase;\n  font-size: 12px;\n  cursor: pointer;\n  margin: 8px;\n`\n\nconst RightButton = styled(LeftButton)`\n  background-color: white;\n  opacity: 0.65;\n  color: black;\n`\n\nconst DownArrow = styled.img`\n  margin-block: 15px;\n  height: 40px;\n  animation: animateDown infinite 1.5s;\n`\n\nconst Buttons = styled.div `\n\n`","import React from 'react'\nimport styled from 'styled-components'\nimport Section from './Section'\n\nfunction Home() {\n  return (\n    <Container>\n      <Section\n        title = 'Model S'\n        description = 'Order Online for touchless delivery'\n        backgroudImg = 'model-s.jpg'\n        leftBtnText = 'Cusmon order'\n        rightBtnText = 'Existing inventory'\n      />\n\n      <Section\n        title = 'Model Y'\n        description = 'Order Online for touchless delivery'\n        backgroudImg = 'model-y.jpg'\n        leftBtnText = 'Cusmon order'\n        rightBtnText = 'Existing inventory'\n      />\n\n      <Section\n        title = 'Model 3'\n        description = 'Order Online for touchless delivery'\n        backgroudImg = 'model-3.jpg'\n        leftBtnText = 'Cusmon order'\n        rightBtnText = 'Existing inventory'\n      />\n\n      <Section\n        title = 'Model X'\n        description = 'Order Online for touchless delivery'\n        backgroudImg = 'model-x.jpg'\n        leftBtnText = 'Cusmon order'\n        rightBtnText = 'Existing inventory'\n      />\n\n      <Section\n        title = 'Lowest cost solar panels in America'\n        description = 'Money-back guarantee'\n        backgroudImg = 'solar-panel.jpg'\n        leftBtnText = 'Order now'\n        rightBtnText = 'Learn more'\n      />\n\n      <Section\n        title = 'Solar for new Roofs'\n        description = 'Solar Roof costs less than a new Roof plus solar panels'\n        backgroudImg = 'solar-roof.jpg'\n        leftBtnText = 'Order now'\n        rightBtnText = 'Learn more'\n      />\n\n      <Section\n        title = 'Accessories'\n        description = ''\n        backgroudImg = 'accessories.jpg'\n        leftBtnText = 'Shop now'\n      />\n\n    </Container>\n  )\n}\n\nexport default Home\n\n\nconst Container = styled.div `\n  height: 100vh;\n`","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from '../features/car/carSlice'\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}